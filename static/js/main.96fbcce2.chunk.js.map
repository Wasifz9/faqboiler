{"version":3,"sources":["logo.svg","ListItem.js","FAQ.js","ContactUs.js","App.js","reportWebVitals.js","index.js"],"names":["ListItem","props","heightRef","useRef","useState","isOpen","Opener","current","console","log","scrollHeight","className","Button","variant","color","onClick","buttonLabel","ref","style","height","info","FAQ","Typography","ContactUs","TextField","id","label","name","multiline","rows","marginTop","type","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,qBCuCAA,MAlCf,SAAkBC,GACd,IAAMC,EAAYC,mBADG,EAEIC,oBAAS,GAFb,mBAEdC,EAFc,KAENC,EAFM,KAOrB,OAFIJ,EAAUK,SAASC,QAAQC,IAAIP,EAAUK,QAAQG,cAGjD,sBAAKC,UAAU,WAAf,UACI,cAACC,EAAA,EAAD,CAASC,QAAQ,YAAYC,MAAM,YAAYC,QAAW,kBAAKT,GAAQD,IAAvE,SACKJ,EAAMe,cAGX,qBACIL,UAAY,cACZM,IAAOf,EACPgB,MACIb,EACC,CACGc,OAAQjB,EAAUK,QAAQG,aAAe,MAE7C,CACIS,OAAQ,OATpB,SAcI,mCAAMlB,EAAMmB,KAAZ,a,QCKDC,MAhCf,WAEI,OADkBlB,mBAEd,sBAAKQ,UAAU,MAAf,UACI,cAACW,EAAA,EAAD,CAAYT,QAAU,KAAKC,MAAQ,YAAnC,iBAEA,cAAC,EAAD,CACIE,YAAa,OACbI,KAAO,wQAEX,cAAC,EAAD,CACIJ,YAAa,QACbI,KAAO,wQAEX,cAAC,EAAD,CACIJ,YAAa,QACbI,KAAO,wQAGX,cAAC,EAAD,CACIJ,YAAa,SACbI,KAAO,wQAEX,cAAC,EAAD,CACIA,KAAO,sQACPJ,YAAa,a,gBC3Bd,SAASO,IActB,OACE,qBAAKZ,UAAY,UAAjB,SACI,uBAAMA,UAAU,eAAhB,UACI,cAACW,EAAA,EAAD,CAAYT,QAAU,KAAKC,MAAQ,YAAnC,kCACA,cAACU,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,OAAOC,KAAK,cACjD,uBACA,cAACH,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,QAAQC,KAAK,eAClD,uBACA,cAACH,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,UAAUC,KAAK,cACpD,uBACA,uBACA,cAACH,EAAA,EAAD,CACIC,GAAG,iBACHC,MAAM,UACNE,WAAS,EACTC,KAAM,EACNhB,QAAQ,WACRc,KAAO,UACPb,MAAQ,cAGZ,qBAAKI,MAAS,CAACY,UAAU,QAAzB,SACI,cAAClB,EAAA,EAAD,CAASC,QAAQ,YAAYC,MAAM,YAAYiB,KAAO,SAASC,MAAQ,OAAvE,2BCxBDC,MAXf,WACE,OACE,8BACE,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAACY,EAAD,UCGOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96fbcce2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useRef, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction ListItem(props) {\r\n    const heightRef = useRef();\r\n    const [isOpen, Opener] = useState(false);\r\n    \r\n\r\n    if (heightRef.current) console.log(heightRef.current.scrollHeight)\r\n    \r\n    return (\r\n        <div className=\"listItem\">\r\n            <Button  variant=\"contained\" color=\"secondary\" onClick = {()=> Opener(!isOpen)}>\r\n                {props.buttonLabel}\r\n            </Button>\r\n\r\n            <div \r\n                className = 'collapsible'\r\n                ref = {heightRef}\r\n                style = {\r\n                    isOpen \r\n                    ?{\r\n                        height: heightRef.current.scrollHeight + 'px',\r\n                    } :\r\n                    {\r\n                        height: \"0px\"\r\n                    }\r\n\r\n                }\r\n            > \r\n                <h3> {props.info} </h3>\r\n            </div> \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ListItem;","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useRef } from 'react';\r\nimport ListItem from \"./ListItem.js\"\r\nimport Typography from '@material-ui/core/Typography';\r\nfunction FAQ() {\r\n    const heightRef = useRef();\r\n    return (\r\n        <div className=\"FAQ\">\r\n            <Typography variant = 'h2' color = \"secondary\">FAQ</Typography>\r\n\r\n            <ListItem \r\n                buttonLabel ='who?' \r\n                info = 'Created a cognitive data analytic and decision support pipeline for classifying noisy medical data based on schema and ministry specified guidelines using both a rule based and a neural network approach to identify reportable critical diseases [Lucas Rychlo].'\r\n            />\r\n            <ListItem \r\n                buttonLabel ='what?'\r\n                info = 'Created a cognitive data analytic and decision support pipeline for classifying noisy medical data based on schema and ministry specified guidelines using both a rule based and a neural network approach to identify reportable critical diseases [Lucas Rychlo].'\r\n            />\r\n            <ListItem \r\n                buttonLabel ='when?'\r\n                info = 'Created a cognitive data analytic and decision support pipeline for classifying noisy medical data based on schema and ministry specified guidelines using both a rule based and a neural network approach to identify reportable critical diseases [Lucas Rychlo].'\r\n        \r\n            />\r\n            <ListItem \r\n                buttonLabel ='where?' \r\n                info = 'Created a cognitive data analytic and decision support pipeline for classifying noisy medical data based on schema and ministry specified guidelines using both a rule based and a neural network approach to identify reportable critical diseases [Lucas Rychlo].'\r\n            />\r\n            <ListItem \r\n                info = 'Created a cognitive data analytic and decision support pipeline for classifying noisy medical data based on schema and ministry specified guidelines using both a rule based and a neural network approach to identify reportable critical diseases [Lucas Rychlo].'\r\n                buttonLabel ='why?' \r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default FAQ;\r\n","import React from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport { TextField, Button, Typography} from '@material-ui/core';\r\nexport default function ContactUs() {\r\n\r\n  function sendEmail(e) {\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm('', '', e.target, '')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n      e.target.reset();\r\n  }\r\n\r\n  return (\r\n    <div className = 'section'>\r\n        <form className=\"contact-form\">\r\n            <Typography variant = 'h6' color = \"secondary\" >Any extra questions?</Typography>\r\n            <TextField id=\"standard-basic\" label=\"Name\" name=\"user_name\"/>\r\n            <br/>\r\n            <TextField id=\"standard-basic\" label=\"Email\" name=\"user_email\"/>\r\n            <br/>\r\n            <TextField id=\"standard-basic\" label=\"Phone #\" name=\"phone_num\"/>\r\n            <br/>\r\n            <br/>\r\n            <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Message\"\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                name = \"message\"\r\n                color = \"secondary\"\r\n            />\r\n\r\n            <div style = {{marginTop:20 + 'px'}}> \r\n                <Button  variant=\"contained\" color=\"secondary\" type = 'submit' value = 'Send'> \r\n                    Submit\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    </div> \r\n  );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport FAQ from './FAQ.js';\nimport ContactUs from './ContactUs.js'\nfunction App() {\n  return (\n    <div>\n      <div className=\"App\">\n        <FAQ/>\n        <ContactUs/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}